version: "3.2"
services:
  api_gateway:
    platform: linux/x86_64
    container_name: digital_wallet_api_gateway
    build: ./api-gateway
    restart: always
    hostname: gateway
    env_file:
      - ./api-gateway/.env
    ports:
      - "3000:3000"
    networks:
      - backend_net
    depends_on:
      - auth_service
      - wallet_service
      - statement_service
  auth_service:
    platform: linux/x86_64
    build: ./auth-service
    restart: always
    hostname: auth_service
    env_file:
      - ./auth-service/.env
    networks:
      - backend_net
    links:
      - postgres
    depends_on:
      - postgres
  wallet_service:
    platform: linux/x86_64
    build: ./wallet-service
    restart: always
    hostname: wallet_service
    env_file:
      - ./wallet-service/.env
    networks:
      - backend_net
    links:
      - postgres
      - rabbitmq
    depends_on:
      - postgres
      - rabbitmq
  statement_service:
    platform: linux/x86_64
    build: ./statement-service
    restart: always
    hostname: statement_service
    env_file:
      - ./statement-service/.env
    networks:
      - backend_net
    links:
      - postgres
      - rabbitmq
    depends_on:
      - postgres
      - rabbitmq
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'digital_wallet_rabbitmq'
    hostname: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - backend_net
  postgres:
    env_file:
      - .env
    restart: always
    hostname: db
    container_name: digital_wallet_postgres
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/db.sql
    networks:
        - backend_net
networks:
  backend_net:
    driver: bridge
